# Stage 1: Build the application with all dependencies
# Use a full Python image to compile dependencies if needed
FROM python:3.11-slim-bookworm AS builder

WORKDIR /app

# Install build-essential for any C-extensions in Python packages
RUN apt-get update && apt-get install -y --no-install-recommends build-essential

# Create and activate a virtual environment for clean dependency management
ENV VIRTUAL_ENV=/app/venv
RUN python3 -m venv $VIRTUAL_ENV
ENV PATH="$VIRTUAL_ENV/bin:$PATH"

# Install Python dependencies into the virtual environment
COPY apps/api-python/requirements.txt .
RUN pip install --no-cache-dir -r requirements.txt

# Stage 2: Create the final, lean production image
FROM python:3.11-slim-bookworm AS final

WORKDIR /app

# Create a non-root user and group for enhanced security
RUN addgroup --system app && adduser --system --group app

# Copy the virtual environment from the builder stage
COPY --from=builder /app/venv /app/venv

# Copy the application source code
COPY apps/api-python .

# Change ownership of the app directory
RUN chown -R app:app /app

# Switch to the non-root user
USER app

# Add the virtual environment to the PATH
ENV PATH="/app/venv/bin:$PATH"

# Create data directory
RUN mkdir -p /app/data

# Expose the application port
EXPOSE 8001

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=40s --retries=3 \
  CMD curl -f http://localhost:8001/api/healthz || exit 1

# Command to run the Uvicorn server, binding to all interfaces
CMD ["uvicorn", "main:app", "--host", "0.0.0.0", "--port", "8001"]
