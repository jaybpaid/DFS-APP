{
  "name": "dfs-optimizer-monorepo",
  "version": "1.0.0",
  "description": "DFS Optimizer Monorepo - pnpm + turbo workspaces",
  "private": true,
  "type": "module",
  "packageManager": "pnpm@10.14.0",
  "workspaces": [
    "apps/*",
    "packages/*"
  ],
  "scripts": {
    "build": "turbo run build",
    "dev": "turbo run dev",
    "dev:api": "cd apps/api && pnpm dev",
    "dev:web": "cd apps/web && pnpm dev",
    "start:api": "cd apps/api && pnpm start",
    "start:web": "cd apps/web && pnpm preview",
    "start": "concurrently \"pnpm start:api\" \"pnpm start:web\"",
    "test": "turbo run test",
    "test:smoke": "turbo run test:smoke",
    "lint": "turbo run lint",
    "clean": "turbo run clean",
    "migrate-data": "cd scripts && node migrate-live-data.ts",
    "claude:quality": "npx prettier --write . --ignore-unknown && pnpm turbo run lint --fix || true && black apps/api-python/ || true",
    "claude:build": "pnpm install && pnpm turbo run build && docker-compose build",
    "claude:test": "pnpm turbo run test && pytest apps/api-python/tests/ -v",
    "claude:deploy": "docker-compose -f docker-compose.production.yml up -d --build",
    "claude:automate": "pnpm run claude:quality && pnpm run claude:build && pnpm run claude:test",
    "claude:health": "curl -f http://localhost:3000/health && curl -f http://localhost:8000/health",
    "integration:build": "docker build -f docker/Dockerfile.dfs-platform -t dfs-platform:latest .",
    "integration:dev": "docker-compose -f docker-compose.integration.yml up --build",
    "integration:prod": "docker-compose -f docker-compose.integration.yml -f docker-compose.prod.yml up -d",
    "integration:test": "pnpm run test:integration:full",
    "build:dfsforge": "echo 'Building DFSForge frontend...' && cd DFSForge/client && npm run build || echo 'DFSForge build skipped'",
    "build:integration-layer": "tsc -p integration/tsconfig.json",
    "build:unified": "pnpm run build:dfsforge && pnpm run build:integration-layer && pnpm run build",
    "test:frontend": "echo 'Running frontend tests...' && cd DFSForge/client && npm test || echo 'Frontend tests skipped'",
    "test:backend": "cd dfs-system-2 && python -m pytest tests/ -v || echo 'Backend tests skipped'",
    "test:integration": "echo 'Integration tests placeholder'",
    "test:integration:full": "pnpm run test:frontend && pnpm run test:backend && pnpm run test:integration",
    "dev:platform": "concurrently \"pnpm run dev:backend\" \"pnpm run dev:frontend\" \"pnpm run dev:bridge\"",
    "dev:backend": "echo 'Starting DFS-SYSTEM-2 backend...' && cd dfs-system-2 && python live_optimizer_api.py || echo 'Backend start failed'",
    "dev:frontend": "echo 'Starting DFSForge frontend...' && cd DFSForge/client && npm run dev || echo 'Frontend start failed'",
    "dev:bridge": "echo 'Starting API bridge...' && cd integration && npm run dev || echo 'Bridge start failed'",
    "deploy:staging": "pnpm run integration:build && docker tag dfs-platform:latest dfs-platform:staging",
    "deploy:production": "pnpm run integration:build && docker tag dfs-platform:latest dfs-platform:production"
  },
  "dependencies": {
    "zod": "^3.24.2"
  },
  "devDependencies": {
    "@types/node": "^22.0.0",
    "@typescript-eslint/eslint-plugin": "^7.18.0",
    "@typescript-eslint/parser": "^7.18.0",
    "concurrently": "^8.2.0",
    "eslint": "^8.57.1",
    "eslint-config-prettier": "^10.1.8",
    "eslint-plugin-react": "^7.37.5",
    "eslint-plugin-react-hooks": "^5.2.0",
    "prettier": "^3.6.2",
    "turbo": "^2.0.0",
    "typescript": "^5.9.2"
  },
  "engines": {
    "node": ">=22.0.0",
    "pnpm": ">=10.0.0"
  }
}
