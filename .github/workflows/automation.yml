name: DFS Automated Quality & Build

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main]

env:
  NODE_VERSION: '22'
  PYTHON_VERSION: '3.11'

jobs:
  automation:
    name: 'Quality & Build Automation'
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 10.14.0

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: Cache pnpm dependencies
        uses: actions/cache@v3
        with:
          path: ~/.pnpm-store
          key: ${{ runner.os }}-pnpm-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-

      - name: Install Python quality tools
        run: |
          pip install black pylint isort mypy pytest pytest-asyncio httpx pytest-cov

      - name: Install dependencies
        run: pnpm install

      - name: Run quality automation
        run: pnpm run claude:quality
        continue-on-error: true

      - name: Build automation
        run: pnpm run claude:build

      - name: Test automation
        run: pnpm run claude:test
        continue-on-error: true

      - name: Health check
        run: pnpm run claude:health
        continue-on-error: true

      - name: Upload build artifacts
        uses: actions/upload-artifact@v3
        if: success()
        with:
          name: build-artifacts
          path: |
            apps/*/dist/
            packages/*/dist/
          retention-days: 7

  security-scan:
    name: 'Security & Dependency Check'
    runs-on: ubuntu-latest
    needs: automation

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: 'fs'
          scan-ref: '.'
          format: 'sarif'
          output: 'trivy-results.sarif'

      - name: Upload Trivy scan results
        uses: github/codeql-action/upload-sarif@v2
        if: always()
        with:
          sarif_file: 'trivy-results.sarif'
